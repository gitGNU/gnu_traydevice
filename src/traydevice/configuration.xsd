<?xml version="1.0" encoding="utf-8"?>
<!--
  Copyright (C) 2009  Martin Å pelina <shpelda at seznam dot cz>

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
-->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="traydevice" type="T_traydevice"/>

  <!-- 
       traydevice configuration consists of configuration of tray icon itself,
       and popup menu description 
  -->
  <xs:complexType name="T_traydevice">
    <xs:sequence>
      <xs:element name="iconmap" type="T_iconmap"/>
      <xs:element name="menuitem" type="T_menuitem" maxOccurs="unbounded"/> 
    </xs:sequence>
  </xs:complexType>

  <!--one entry in menu -->
  <xs:complexType name="T_menuitem">
    <xs:sequence>
    <!-- command that gets invoked in case menu entry is pressed -->
    <xs:element name="command" type="T_command" maxOccurs="unbounded"/>
    <!-- condition, when this particular menu entry should be enabled -->
    <xs:element name="enabled_if" type="T_condition"/>
    </xs:sequence>
    <xs:attribute name="text" type="xs:string" use="required"/> <!--this is the text displayed on the menu entry, must be unique across whole popup-->
    <xs:attribute name="icon" type="xs:string"/><!-- icon displayed on menu entry -->
  </xs:complexType>

  <!-- command to be executed -->
  <xs:complexType name="T_command">
    <xs:sequence>
      <xs:choice maxOccurs="unbounded">
        <!-- raw string argument -->
        <xs:element name="arg" type="xs:string"/>
        <!-- reference to hal property -->
        <xs:element name="ref" type="xs:string"/>
      </xs:choice>
      </xs:sequence>
    <xs:attribute name="executable" type="xs:string" use="required"/>
  </xs:complexType>

  <!-- mapping of hal conditions and icons-->
  <xs:complexType name="T_iconmap">
    <xs:sequence>
      <xs:element name="icon" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <!-- what condition must be fullfilled to display this icon -->
            <xs:element name="displayed_if" type="T_condition"/>
            <xs:element name="tooltip" type="T_tooltip"/>
          </xs:sequence>
          <!-- icon displayed on menu entry -->
          <xs:attribute name="icon" type="xs:string" use="required"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="default_icon" type="xs:string" use="required"/><!-- icon displayed on systray  -->
  </xs:complexType>

  <xs:complexType name="T_tooltip">
    <xs:attribute name="regex" type="xs:string" use="required"/>
    <xs:attribute name="replacement" type="xs:string" use="required"/>
    <xs:attribute name="ref" type="xs:string" use="required"/>
  </xs:complexType>
  
  <xs:complexType name="T_conjunction">
    <xs:sequence>
      <xs:choice maxOccurs="unbounded">
        <xs:element name="and" type="T_conjunction"/>
        <xs:element name="or" type="T_disjunction"/>
        <xs:element name="not" type="T_negation"/>
        <xs:element name="match" type="T_elementary_condition"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="T_disjunction">
    <xs:sequence>
      <xs:choice maxOccurs="unbounded">
        <xs:element name="and" type="T_conjunction"/>
        <xs:element name="or" type="T_disjunction"/>
        <xs:element name="not" type="T_negation"/>
        <xs:element name="match" type="T_elementary_condition"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="T_negation">
    <xs:choice>
      <xs:element name="and" type="T_conjunction"/>
      <xs:element name="or" type="T_disjunction"/>
      <xs:element name="not" type="T_negation"/>
      <xs:element name="match" type="T_elementary_condition"/>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="T_condition">
    <xs:choice>
      <xs:element name="and" type="T_conjunction"/>
      <xs:element name="or" type="T_disjunction"/>
      <xs:element name="not" type="T_negation"/>
      <xs:element name="match" type="T_elementary_condition"/>
    </xs:choice>  
  </xs:complexType>

  <!--TODO: support for all <match> atributes from hal specification http://www.marcuscom.com/hal-spec/hal-spec.html#fdi-matching -->
  <xs:complexType name="T_elementary_condition">
      <xs:attribute name="key" type="xs:string" use="required"/><!--hal property key-->
      <xs:attribute name="string" type="xs:string" use="optional"/><!-- match a string property-->
      <xs:attribute name="int" type="xs:int" use="optional"/><!--int - match an integer property-->
      <xs:attribute name="bool" type="xs:boolean" use="optional"/><!--int - match a boolean property-->
  </xs:complexType>


</xs:schema>
