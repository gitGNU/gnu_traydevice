<?xml version="1.0" encoding="utf-8"?>
<!--
  Copyright (C) 2009  Martin Å pelina <shpelda at seznam dot cz>

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
-->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="traydevice" type="T_traydevice"/>

  <xs:complexType name="T_traydevice">
    <xs:annotation>
      <xs:documentation>
       Master configuration type.
       consists of configuration of tray icon itself,
       and popup menu description 
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="iconmap" type="T_iconmap"/>
      <xs:element name="menuitem" type="T_menuitem" maxOccurs="unbounded"/> 
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="T_menuitem">
    <xs:annotation>
      <xs:documentation>
        One entry in menu. 
        Defines command to be executed when user clicks on menu entry 
        and a condition when is this menu entry enabled.
        Attribute "text" defines text displayed on menuitem.
        Attribute "icon" defines icon image displayed on menuitem.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="command" type="T_command" maxOccurs="unbounded"/>
      <xs:element name="enabled_if" type="T_condition"/>
    </xs:sequence>
    <xs:attribute name="text" type="xs:string" use="required"/> 
    <xs:attribute name="icon" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="T_command">
    <xs:annotation>
      <xs:documentation>
        Defines command to be executed and it's parameters.
        It is possible to pass either raw arguments, using nested element "arg" or
        device-property references, using nested element "ref"
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice maxOccurs="unbounded">
        <xs:element name="arg" type="xs:string"/>
        <xs:element name="ref" type="xs:string"/>
      </xs:choice>
      </xs:sequence>
    <xs:attribute name="executable" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="T_trayicon_configuration">
      <xs:annotation>
        <xs:documentation>
          Configuration of a systray icon.
          This will be used if nested property "displayed_if" is fullfilled.
          Displayed icon has a tooltip assigned, defined by nested "tooltip" element.
          Attribute "icon" defines icon image displayed in systray.
        </xs:documentation>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="displayed_if" type="T_condition"/>
        <xs:element name="tooltip" type="T_command">
          <xs:annotation>
            <xs:documentation>
            Defines tooltip construction.
            Command is called, and it's standard output is used as tooltip value.
            </xs:documentation>
          </xs:annotation>
        </xs:elemnt>
      </xs:sequence>
      <xs:attribute name="icon" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="T_iconmap">
    <xs:annotation>
      <xs:documentation>
        Defines which icon will be displayed in systray.
        Attribute "default_icon" defines a icon image that will be used if no nested icon
        configurations match.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="icon"  type="T_trayicon_configuration" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="default_icon" type="xs:string" use="required"/>
  </xs:complexType>


  
  <xs:complexType name="T_conjunction">
    <xs:annotation>
      <xs:documentation>
        A simple AND logical operator.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice maxOccurs="unbounded">
        <xs:element name="and" type="T_conjunction"/>
        <xs:element name="or" type="T_disjunction"/>
        <xs:element name="not" type="T_negation"/>
        <xs:element name="match" type="T_elementary_condition"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="T_disjunction">
    <xs:annotation>
      <xs:documentation>
        A simple OR logical operator.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice maxOccurs="unbounded">
        <xs:element name="and" type="T_conjunction"/>
        <xs:element name="or" type="T_disjunction"/>
        <xs:element name="not" type="T_negation"/>
        <xs:element name="match" type="T_elementary_condition"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="T_negation">
    <xs:annotation>
      <xs:documentation>
        A simple NOT logical operator.
      </xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="and" type="T_conjunction"/>
      <xs:element name="or" type="T_disjunction"/>
      <xs:element name="not" type="T_negation"/>
      <xs:element name="match" type="T_elementary_condition"/>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="T_condition">
    <xs:annotation>
      <xs:documentation>
        A generic condition.
      </xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="and" type="T_conjunction"/>
      <xs:element name="or" type="T_disjunction"/>
      <xs:element name="not" type="T_negation"/>
      <xs:element name="match" type="T_elementary_condition"/>
    </xs:choice>  
  </xs:complexType>

  <xs:complexType name="T_elementary_condition">
    <xs:annotation>
      <xs:documentation>
        Single device-property matching.
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="key" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          device-property key.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="string" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>
          Matching of string property.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="int" type="xs:int" use="optional">
      <xs:annotation>
        <xs:documentation>
          Matching of integer property.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="bool" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>
          Matching of boolean property.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

</xs:schema>
